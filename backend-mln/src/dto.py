from pydantic import BaseModel, Field
from typing import List, Dict, Optional
from time import time

class ChatMessage(BaseModel):
    role: str = Field(..., description="Role: 'user' or 'assistant'")
    # content: str = Field(..., description="Message content")

class ChatRequest(BaseModel):
    message: str = Field(..., description="The user's message to the chat model")
    # conversation_history: Optional[List[ChatMessage]] = Field(default=[], description="Previous conversation messages")

class ChatResponse(BaseModel):
    answer: str = Field(description="The answer generated by the model")
    #timestamp: time = Field(default_factory=time, description="The time the response was generated")
